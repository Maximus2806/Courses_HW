{
	"info": {
		"_postman_id": "b2302abe-3954-46d1-af7f-afdde3dff08e",
		"name": "HW2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Request_1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/first\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Проверить, что в body приходит правильный string.\r",
							"pm.test(\"Body matches string\", function () {\r",
							"    pm.expect(pm.response.text()).to.include(\"This is the first responce from server!\");\r",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/first",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"first"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request_2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/user_info_3\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"let ourResponse = pm.response.json();\r",
							"// 4. Проверить, что name в ответе равно name s request (name вбить руками.)\r",
							"pm.test(\"Your name s request\", function () {\r",
							"    pm.expect(ourResponse.name).to.eql(\"Max\");\r",
							"});\r",
							"// 5. Проверить, что age в ответе равно age s request (age вбить руками.)\r",
							"pm.test(\"Your age s request\", function () {\r",
							"    pm.expect(+ourResponse.age).to.eql(43);\r",
							"});\r",
							"// 6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)\r",
							"pm.test(\"Your salary s request\", function () {\r",
							"    pm.expect(+ourResponse.salary).to.eql(1500);\r",
							"});\r",
							"// 7. Спарсить request.\r",
							"let ourRequest = request.data;\r",
							"// 8. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"Your name s request\", function () {\r",
							"    pm.expect(ourResponse.name).to.eql(ourRequest.name);\r",
							"});\r",
							"// 9. Проверить, что age в ответе равно age s request (age забрать из request.) \r",
							"pm.test(\"Your age s request\", function () {\r",
							"    pm.expect(+ourResponse.age).to.eql(+ourRequest.age);\r",
							"});\r",
							"// 10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)    \r",
							"pm.test(\"Your salary s request\", function () {\r",
							"    pm.expect(+ourResponse.salary).to.eql(+ourRequest.salary);\r",
							"});\r",
							"// 11. Вывести в консоль параметр family из response.\r",
							"console.log(ourResponse.family);\r",
							"// 12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)\r",
							"pm.test(\"Your u_salary_1_5_year = salary*4\", function () {\r",
							"    pm.expect(+ourResponse.family.u_salary_1_5_year).to.eql(ourRequest.salary*4); \r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "formdata",
					"formdata": [
						{
							"key": "name",
							"value": "Max",
							"type": "text"
						},
						{
							"key": "age",
							"value": "43",
							"type": "text"
						},
						{
							"key": "salary",
							"value": "1500",
							"type": "text"
						}
					]
				},
				"url": {
					"raw": "http://162.55.220.72:5005/user_info_3",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"user_info_3"
					]
				}
			},
			"response": []
		},
		{
			"name": "Request_3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_3\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"let ourResponse3 = pm.response.json();\r",
							"// 4. Спарсить request.\r",
							"let ourRequest3 = pm.request.url.query.toObject();\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"name response = name request\", function() {\r",
							"    pm.expect(ourResponse3.name).to.eql(ourRequest3.name)\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"age response = age request\", function() {\r",
							"    pm.expect(ourResponse3.age).to.eql(ourRequest3.age)\r",
							"});\r",
							"// 7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)\r",
							"pm.test(\"salary response = salary request\", function() {\r",
							"    pm.expect(+ourResponse3.salary).to.eql(+ourRequest3.salary)\r",
							"});\r",
							"// 8. Вывести в консоль параметр family из response.\r",
							"console.log(ourResponse3.family);\r",
							"// 9. Проверить, что у параметра dog есть параметры name.\r",
							"pm.test(\"'Dog' has key 'name'\", function () {\r",
							"    pm.expect(ourResponse3.family.pets.dog).to.have.any.keys('name');\r",
							"});\r",
							"// 10. Проверить, что у параметра dog есть параметры age.\r",
							"pm.test(\"'Dog' has key 'age'\", function () {\r",
							"    pm.expect(ourResponse3.family.pets.dog).to.have.any.keys('age');\r",
							"});\r",
							"// 11. Проверить, что параметр name имеет значение Luky.\r",
							"pm.test(\"dog.name = Luky\", function() {\r",
							"    pm.expect(ourResponse3.family.pets.dog.name).to.eql(\"Luky\")\r",
							"});\r",
							"// 12. Проверить, что параметр age имеет значение 4.\r",
							"pm.test(\"dog.age = 4\", function() {\r",
							"    pm.expect(+ourResponse3.family.pets.dog.age).to.eql(4)\r",
							"});\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_3?name=Vasily&age=36&salary=700",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_3"
					],
					"query": [
						{
							"key": "name",
							"value": "Vasily"
						},
						{
							"key": "age",
							"value": "36"
						},
						{
							"key": "salary",
							"value": "700"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "Request_4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"// http://162.55.220.72:5005/object_info_4\r",
							"// 1. Отправить запрос.\r",
							"// 2. Статус код 200\r",
							"pm.test(\"Status code is 200\", function () {\r",
							"    pm.response.to.have.status(200);\r",
							"});\r",
							"// 3. Спарсить response body в json.\r",
							"let ourResponse4 = pm.response.json();\r",
							"// 4. Спарсить request.\r",
							"let ourRequest4 = pm.request.url.query.toObject();\r",
							"// 5. Проверить, что name в ответе равно name s request (name забрать из request.)\r",
							"pm.test(\"name response = name request\", function() {\r",
							"    pm.expect(ourResponse4.name).to.eql(ourRequest4.name)\r",
							"});\r",
							"// 6. Проверить, что age в ответе равно age s request (age забрать из request.)\r",
							"pm.test(\"age response = age request\", function() {\r",
							"    pm.expect(+ourResponse4.age).to.eql(+ourRequest4.age)\r",
							"});\r",
							"// 7. Вывести в консоль параметр salary из request.\r",
							"console.log(ourRequest4.salary);\r",
							"// 8. Вывести в консоль параметр salary из response.\r",
							"console.log(ourResponse4.salary);\r",
							"// 9. Вывести в консоль 0-й элемент параметра salary из response.\r",
							"console.log(ourResponse4.salary[0]);\r",
							"// 10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.\r",
							"console.log(ourResponse4.salary[1]);\r",
							"// 11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.\r",
							"console.log(ourResponse4.salary[2]);\r",
							"// 12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)\r",
							"pm.test(\"salary[0] response = salary request\", function() {\r",
							"    pm.expect(+ourResponse4.salary[0]).to.eql(+ourRequest4.salary)\r",
							"});\r",
							"// 13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)\r",
							"pm.test(\"salary[1] response = 2*salary request\", function() {\r",
							"    pm.expect(+ourResponse4.salary[1]).to.eql(2*ourRequest4.salary)\r",
							"});\r",
							"// 14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)\r",
							"pm.test(\"salary[2] response = 3*salary request\", function() {\r",
							"    pm.expect(+ourResponse4.salary[2]).to.eql(3*ourRequest4.salary)\r",
							"});\r",
							"// 15. Создать в окружении переменную name\r",
							"// 16. Создать в окружении переменную age\r",
							"// 17. Создать в окружении переменную salary\r",
							"// Создаем через меню Environment->Create new environment->Set active->в поле Variable создаем переменные с нужными именами\r",
							"// 15. Создать в окружении переменную name\r",
							"pm.environment.set(\"name\", \"Alex\");\r",
							"// 18. Передать в окружение переменную name\r",
							"pm.environment.set(\"age\", 25);\r",
							"// 19. Передать в окружение переменную age\r",
							"pm.environment.set(\"salary\", 600);\r",
							"// 20. Передать в окружение переменную salary\r",
							"for (let i = 0; i<3; i++) {\r",
							"    console.log(ourResponse4.salary[i])};\r",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://162.55.220.72:5005/object_info_4?name=Alesia&age=33&salary=850",
					"protocol": "http",
					"host": [
						"162",
						"55",
						"220",
						"72"
					],
					"port": "5005",
					"path": [
						"object_info_4"
					],
					"query": [
						{
							"key": "name",
							"value": "Alesia"
						},
						{
							"key": "age",
							"value": "33"
						},
						{
							"key": "salary",
							"value": "850"
						}
					]
				}
			},
			"response": []
		}
	]
}